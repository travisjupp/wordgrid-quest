name: Move Tasks to In Progress

permissions:
  contents: read
  issues: write
  pull-requests: write
  project: write

on:
  pull_request:
    types: [opened, edited]

jobs:
  move-to-in-progress:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Move tasks to In Progress
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Get the pull request number
          PR_NUMBER=${{ github.event.pull_request.number }}
          REPO_NAME=${{ github.repository }}

          # Query the GraphQL API to get the project item IDs linked to the pull request
          ITEMS=$(curl -s -X POST \
            -H "Authorization: Bearer $GITHUB_TOKEN" \
            -H "Content-Type: application/json" \
            -d '{"query":"query { repository(owner: \"'${REPO_NAME%/*}'\", name: \"'${REPO_NAME#*/}'\") { pullRequest(number: '${PR_NUMBER}') { projectItems(first: 10) { nodes { id project { title } } } } } }"}' \
            https://api.github.com/graphql)

          # Extract the project item ID(s) and the project title(s) using jq
          echo "$ITEMS" | jq .

          # Loop through the project items and move them to the "In Progress" column
          for ITEM_ID in $(echo "$ITEMS" | jq -r '.data.repository.pullRequest.projectItems.nodes[].id'); do
            # Fetch the "In Progress" column ID for the item's project
            COLUMN_ID=$(curl -s -X POST \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{"query":"query { node(id: \"'${ITEM_ID}'\") { ... on ProjectV2Item { project { id title fields(first: 10) { nodes { ... on ProjectV2Field { name id options { id name } } } } } } } }"}' \
              https://api.github.com/graphql | jq -r '.data.node.project.fields.nodes[] | select(.name=="Status").options[] | select(.name=="In Progress").id')

            # Update the item's status to "In Progress"
            curl -s -X POST \
              -H "Authorization: Bearer $GITHUB_TOKEN" \
              -H "Content-Type: application/json" \
              -d '{"query":"mutation { updateProjectV2ItemFieldValue(input: { projectId: \"'${ITEM_ID}'\", fieldId: \"'${COLUMN_ID}'\", value: { singleSelectOptionId: \"'${COLUMN_ID}'\" } }) { clientMutationId } }"}' \
              https://api.github.com/graphql
          done

